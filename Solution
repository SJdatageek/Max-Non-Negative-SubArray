 class Range{
        int start;
        int end;
        long sum;
        Range(int start,int end, long sum)
        {
            this.start=start;
            this.end=end;
            this.sum=sum;
        }
    }
public class Solution {
    public ArrayList<Integer> maxset(ArrayList<Integer> A) {
        
        Integer[] arr = new Integer[A.size()]; 
        arr = A.toArray(arr); 
        int n=arr.length;
        long max=0;
        int s=0;
        int e=0;
        ArrayList<Range> range= new ArrayList<>();
        for(int i=0;i<n;i++)
        {   
            if(arr[i]>=0)
            {
              max = max+arr[i];
            }
            if(n-1!=0)
            {
            if(i !=0 && arr[i-1]>=0 && arr[i]<0)
            {
                e= i-1;
                Range r= new Range(s,e,max);
                range.add(r);
                max=0;
            }
            if((i !=0 || i==n-1) && arr[i]>=0 && arr[i-1]<0)
            {
                //System.out.println("Enter");
                if(i!=0)
                s=i;
                if(i==n-1)
                {
                  s=i;
                  e=i;
                  Range r= new Range(s,e,max);
                  range.add(r); 
                }  
            }
            if(i==n-1 && arr[i]>=0 && arr[i-1]>0)
            {
                e= i;
                Range r= new Range(s,e,max);
                range.add(r); 
            }
            }
            else if(n-1==0 && arr[i]>0)
            {
                s=0;
                e=n-1;
                Range r= new Range(s,e,max);
                range.add(r);
            }
        }
        
        int N= range.size();
        int j=0;
        if(N>0)
        {
        long maxi = range.get(0).sum;
        int range_index=range.get(0).end-range.get(0).start;
        try{
        for(int i=1; i<N;i++)
        {
            if(range.get(i).sum > maxi)
            {
                maxi = range.get(i).sum;
                j= i;
                range_index= range.get(i).end-range.get(i).start;
                
            }
            if(range.get(i).sum == maxi)
            {
                int k = range.get(i).end-range.get(i).start;
                if(k>range_index)
                j=i;
            }
        }
        }
        catch(Exception exx)
        {
            
        }
        }
        ArrayList<Integer> B= new ArrayList<>();
        try{
        for(int i=range.get(j).start; i<=range.get(j).end; i++)
        {
            B.add(A.get(i));
        }
        }
        catch(Exception ex)
        {
            
        }
        return B;
    }
}
